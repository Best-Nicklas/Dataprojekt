[{"path":"https://best-nicklas.github.io/Dataprojekt/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 RyouSick authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/GWAS.html","id":"gwas","dir":"Articles","previous_headings":"","what":"GWAS","title":"GWAS","text":"GWAS short genome-wide association study, method used identify gene variations statistically associated risk disease. large enough dataset collected approach look genomic variants occur frequently given disease compared without disease. GWAS practices makes simple linear regression genomic variant (values particular SNP) case-control status individual. note implementations GWAS exist, simple implementation one used RyouSick. Among statistics gives us p-value indicating statistical significance observations. Using threshold p-value can determine whether SNP might causal based whether p-value higher lower chosen threshold. performing GWAS using RyouSick package’s GWAS() function large population 100,000 individuals 100,000 SNPs receive following statistics given choose around 10% 100,000 SNPS causal:  note determine whether SNP causal check see p-value lower higher Bonferroni corrected significance level \\(5\\cdot10^{-7}\\), given alpha value 0.05, since perform 100,000 tests/regressions. results can also visualized using Manhattan plot can produced using function Manhattan_plot() SNPs dotted line represents SNPs counted causal. gives us indication sequence causal SNPs appear. comparison results different association studies can seen LTFH article vignette(\"LTFH\").","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/GWAX.html","id":"gwax","dir":"Articles","previous_headings":"","what":"GWAX","title":"GWAX","text":"GWAX short genome-wide association study proxy, approach used identify genomic variants statistically associated risk disease, exactly GWAS. key difference regressand GWAS uses simple linear regression . GWAX makes proxy case-control status based individual´s family history. individuals case-control status zero, meaning disease, just one individual´s parents case-control status one, meaning disease, individual gets proxy status one. GWAX therefore accounts family history herabillity, give useful information analysis. Using GWAX simulated data analyzed GWAS article get following results   see GWAX performs slightly better GWAS. See full comparison methods LTFH article vignette(\"LTFH\"). refer reader original paper GWAX Liu, J.Z. et al. (2017) information method.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/GWAX.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"GWAX","text":"Liu, J.Z., Erlich, Y., Pickrell. Case-control association mapping proxy using family history disease. Nat Genet, 49(3) p325-331 (2017). https://pubmed.ncbi.nlm.nih.gov/28092683/","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/LTFH.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"LTFH","text":"Hujoel, M.L.., Gazal, S., Loh, P. et al. Liability threshold modeling case-control status family history disease increases association power. Nat Genet, 52(5) p541-547 (2020). https://pubmed.ncbi.nlm.nih.gov/32313248/ Pedersen, E.M., Agerbo, E., Plana-Ripoll, et al. Accounting age onset family history improves power genome-wide association studies. American Journal Human Genetics, Volume 109, issue 3, P417-432 (2022). https://www.cell.com/ajhg/fulltext/S0002-9297(22)00009-X/","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"simulation","dir":"Articles","previous_headings":"","what":"Simulation","title":"Getting Started with RyouSick","text":"illustrate use RyouSick lets go example try simulate disease called bad-knee syndrome population. trying simulate genotype case-control phenotype data using RyouSick first simulate disease parameters. Disease parameters target disorder simulated 10 SNPs heritability h2 0.8 prevalence population 0.25: outputs output MAF value given index indicates frequency genome vary reference. CAUSAL vector BETA vector likewise tell us SNPs simulated causally connected developing simulated disease big effect . can now chose kind simulation want perform population. Either family history without using one two functions: sim_genotypes_no_family() simulates genotype case-control phenotype without family case-control phenotypes sim_genotypes_with_family() simulates genotype case-control phenotype family case-control phenotypes Lets try simulation 10 genotypes bad_knee_syndrom disease parameters 1 3 siblings genotype save filename “bad_knee_data10x10”: bad_knee_data now contain list object, refer rds object, reference file-backed matrix (matrix stored disk), tibble containing information disease (MAP) tibble containing phenotype information genotypes. Individual columns data can accessed using dollar notation. Slices genotype data can accessed well. row represents genotype column SNP. (WARNING: highly advise indexing data using [], try load whole file-backed matrix memory, , depending size file, might cause problems) simulated information contained example case bad_knee_data can seen .","code":"library(\"RyouSick\") bad_knee_syndrome <- sim_disease(n_snp = 10, h2 = 0.8, prevalence = 0.25) bad_knee_syndrome #> $MAF #>  [1] 0.40071281 0.22309419 0.04419435 0.42861384 0.46978992 0.15051858 #>  [7] 0.15620303 0.11896250 0.07729138 0.20345860 #>  #> $BETA #>  [1]  0.000000  0.000000  0.000000 -0.296382  0.000000  0.000000  0.000000 #>  [8]  0.000000  0.000000  0.000000 #>  #> $CAUSAL #>  [1] 0 0 0 1 0 0 0 0 0 0 #>  #> $H2 #> [1] 0.8 #>  #> $PREVALENCE #> [1] 0.25 #>  #> $N_SNP #> [1] 10 bad_knee_data <- sim_genotypes_with_family(n = 10,                                             disease = bad_knee_syndrome,                                             path = \"bad_knee_data10x10\",                                             n_sibs = c(1,2,3)) bad_knee_data$FAM$Status #>       [,1] #>  [1,]    1 #>  [2,]    0 #>  [3,]    0 #>  [4,]    0 #>  [5,]    0 #>  [6,]    1 #>  [7,]    0 #>  [8,]    0 #>  [9,]    1 #> [10,]    0 bad_knee_data$genotypes[1:10, 1:10] #>       [,1] [,2] [,3] [,4] [,5] [,6] [,7] [,8] [,9] [,10] #>  [1,]    0    2    0    0    0    0    0    0    0     1 #>  [2,]    1    0    1    2    0    0    0    1    0     1 #>  [3,]    0    0    0    1    1    0    0    1    1     1 #>  [4,]    0    1    0    0    1    0    0    1    0     0 #>  [5,]    0    1    0    0    0    0    0    1    0     0 #>  [6,]    0    0    0    0    0    1    1    0    0     1 #>  [7,]    1    1    0    2    1    1    1    0    0     1 #>  [8,]    0    0    0    2    1    0    0    0    0     0 #>  [9,]    0    0    0    0    0    0    0    1    0     1 #> [10,]    0    0    0    2    1    0    0    0    0     0 knitr::kable(bad_knee_data$MAP, align = \"ccc\") knitr::kable(bad_knee_data$FAM, align = \"ccccccc\")"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"analysis","dir":"Articles","previous_headings":"","what":"Analysis","title":"Getting Started with RyouSick","text":"now perform analysis simulated data. RyouSick package contains three methods analyzing data: GWAS() Linear regression using genotype data case-control status GWAX() Linear regression using genotype data proxy case-control status LTFH() Linear regression using genotype data posterior mean genetic liabilities Lets now try methods data: Output consist estimated effect sizes, standard errors, t-scores p-values SNP, can accessed using dollar notation. Note access analysis data GWAX LTFH use method_result$GWAS_Data$. Statistics data can calculated passing p-values, true causal SNPs pvalue threshold get_stats() function","code":"x <- GWAS(rds.obj = bad_knee_data, y = bad_knee_data$FAM$Status) y <- GWAX(rds.obj = bad_knee_data) z <- LTFH(rds.obj = bad_knee_data, h2 = 0.8, prevalence = 0.5) knitr::kable(x) gwas_stats <- get_stats(pvalues = x$p.value,                          true_causal = bad_knee_syndrome$CAUSAL,                          threshold_pvalue = 0.05) knitr::kable(gwas_stats)"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"visualizations","dir":"Articles","previous_headings":"","what":"Visualizations","title":"Getting Started with RyouSick","text":"can visualize data using function Manhattan_plot() get picture SNPs determined causal:  want visually compare accumulated power methods, can use function Power_plots(). power methods gives us idea methods, finds causal SNP´s. Since randomly assign causal SNP´s simulate disease parameters, ´s possible calculate amount false positives methods , ensures us, methods analyze SNP´s causal, predetermined causal. use function Power_plots() need save GWAS_data method list format. illustrative purposes set p-value threshold 0.5.  also note line GWAS seen plot lays plot GWAX, , using low sample size, produces almost identical results GWAS.","code":"Manhattan_plot(x) power_plot_data = list(x, y$GWAS_Data, z$GWAS_Data) Power_plots(Gwas_data = power_plot_data, p = 0.5)"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"prediction","dir":"Articles","previous_headings":"","what":"Prediction","title":"Getting Started with RyouSick","text":"seen vignette(\"LTFH\") best method evaluating causal SNPs LT-FH. let’s try use Prediction_cross_validation() LT-FH data get model can predict future cases. information can now used Predict_status() predict status future genotypes. illustrative purposes use old data , input needs formatted rds object. gives us following results.","code":"model_results <- Prediction_cross_validation(rds.obj = bad_knee_data,                                              k = 2,                                              method = \"LTFH\") predicted_status <- Predict_status(rds.obj = bad_knee_data,                                    model = model_results$Best_Model) predicted_status #>  [1] 1 0 0 0 0 0 0 0 0 0"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"correct-formatting-of-rds-object","dir":"Articles","previous_headings":"","what":"Correct formatting of rds object","title":"Getting Started with RyouSick","text":"wish run analysis methods data must first formatted properly. must first initialize empty .rds file object matching size data using createRds() function. rds object returned can filled adding columns/vectors MAP FAM tibbles using dollar notation. integrate methods package, columns must given specific names based contents. required information run must functions naming listed MAF (MAP): vector minor allele frequencies SNPs Status (FAM): vector status genotypes p1_Status (FAM): vector parent 1 status genotypes (used GWAX LTFH) p2_Status (FAM): vector parent 2 status genotypes (used GWAX LTFH) sibs_Status (FAM): list containing vector sibling status genotype NULL siblings genotype (used LTFH) Note names case-sensitive. example filling genotypes matrix consisting 1’s creating Status column can seen . Remember making changes tibbles FAM MAP, changes rds object must saved using saveRds(). addtionally, recommended file-backed matrix filled blocks working large quantities data (read article vignette(\"Writing_efficient_R_code_and_working_with_large_datasets\")). rds file can later opened using OpenRds() function.","code":"user_input_obj <- createRds(\"user_input_data\", nrow = 10, ncol = 10) user_input_obj$genotypes[1:10,1:10] <- matrix(1, ncol = 10, nrow) user_input_obj$Status <- c(1,1,1,0,0,0,0,1,0,0) saveRds(user_input_obj)"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/RyouSick.html","id":"parallelization","dir":"Articles","previous_headings":"","what":"Parallelization","title":"Getting Started with RyouSick","text":"Since users work different computers various setups Parallelization enabled default. run simulations using Parallelization, recommended provides significant speedup cases, must first set Parallelization plan. basic computers running windows Parallelization plan work just fine. function called beginning simulations run. refer reader https://future.futureverse.org/reference/plan.html future backend read set plan might work best setup.","code":"future::plan(future::multisession,               workers = max(1, future::availableCores(logical = F) - 1))"},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Simulation_Basis.html","id":"simulating-genotypes","dir":"Articles","previous_headings":"","what":"Simulating Genotypes","title":"Simulation and Liability Modelling","text":"Genetic data DNA can represented various ways. common way list sequence nucleotides (- adenine, G - guanine, C - cytosine, T - thymine) appear position DNA. always appear pairs example sequence AAGGTTCGTTCT. RyouSick package instead working character sequences like , also called genome sequences, go straight working processed version sequence composed single nucleotide polymorphisms (abbreviated SNPs pronounced snips). SNPs give indication genetic variation single base position DNA. Since nucleotides appear pairs deviation reference genome given position can represented using either 0, 1 2. Let’s say pair human reference genome specific position TT. target individual TT position genome write SNP 0, TC (one deviation) write 1 CC (2 deviations) write 2. able represent genomic sequence something like 001201, taking half storage space. refer sequence individual’s genotypes. SNP certain probability deviating reference. known minor allele frequency MAF. simulate individuals package sample MAF SNP uniform distribution \\(MAF_j \\sim uni_j(0.01, 0.49)\\) (although options given input custom MAF vector). values \\(x_j\\) SNP position j genotype sampled binomial distribution \\(x_j \\sim binom(2, MAF_j)\\).","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Simulation_Basis.html","id":"liability-threshold-modeling","dir":"Articles","previous_headings":"","what":"Liability Threshold Modeling","title":"Simulation and Liability Modelling","text":"assigning disease status, also known case-control phenotype, genotypes, make use liability threshold modeling. disease liability, used determine individual’s likelihood disease, modeled using two components, genetic environmental liability . genetic component distributed \\(l_g \\sim N(0, h^2)\\) , \\(h^2\\) heritability given disease environmental factor (noise) \\(l_e\\sim N(0,1-h^2)\\). full liability individual sums \\(l_o = l_g + l_e \\sim N(0,1)\\). environmental component can sampled, calculate genetic liability using \\(X^T \\beta\\), X individual’s genotype \\(\\beta\\) effect size SNP. \\(\\beta\\) value SNP sampled \\(N(0,\\frac{h^2}{c})\\) causal SNP, c number causal SNPs target sequence, 0 whenever SNP causal. full liability calculated assign case control status individual based prevalence disease population. Say prevalence 5% population, determine threshold case upper 5% quantile \\(l_o \\text{~} N(0,1)\\), e.g. 1.645. genotype \\(l_o\\) 1.645 assigned case others case.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Simulation_Basis.html","id":"simulating-family-genotypes","dir":"Articles","previous_headings":"","what":"Simulating Family Genotypes","title":"Simulation and Liability Modelling","text":"simulate children siblings functions first simulate two parent genotypes find average genotype. Different children can generated average genotypes sampling randomly \\(\\{1,2\\}\\) whenever SNP 1.5 \\(\\{0,1\\}\\) whenever SNP 0.5. time also look cases parents 1 SNP case sample randomly \\(\\{0,1,2\\}\\). Case-control status assigned using liability threshold modeling.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Writing_efficient_R_code_and_working_with_large_datasets.html","id":"efficient-code","dir":"Articles","previous_headings":"","what":"Efficient Code","title":"Writing Efficient R Code and Working with Large Genetic Datasets","text":"write efficient code R working simulated genetic data? Firstly ’s important understand efficient code . simply look term efficiency, efficiency roughly means ‘working well’ everyday life. example vehicle goes far without guzzling gas worker gets job done fast without stress. translating efficiency programming, efficient code can broadly understood, efficient code often comes code ’s fast /storage fulfilling.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Writing_efficient_R_code_and_working_with_large_datasets.html","id":"memory-efficiency-and-fbms","dir":"Articles","previous_headings":"","what":"Memory Efficiency and FBMs","title":"Writing Efficient R Code and Working with Large Genetic Datasets","text":"create efficient code, working simulated genetic data? One first bottlenecks working genetic data, amount information needs stored. Genetic data, data genotypes, often stored millions SNPs millions people. running code R, objects stored RAM (Random Access Memory), lot faster hard disk memory, often upper limit much data can stored time. therefore make use files stored disk, also known FBMs (file-backed matrices). end RyouSick package uses bigsnpr bigstatr packages makes working FBMs easy fast. FMBs allow us store much information disc allows. since still limited much data can work time R, load save data onto FBMs blocks data fit RAM. downside turn leads additional /O time. want make code efficient, must also work make faster make .","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/articles/Writing_efficient_R_code_and_working_with_large_datasets.html","id":"speed-efficiency-and-parallelization","dir":"Articles","previous_headings":"","what":"Speed Efficiency and Parallelization","title":"Writing Efficient R Code and Working with Large Genetic Datasets","text":"make run faster? Code R can made faster utilizing inbuilt vectorization exists R functions. Coming programming languages might easy fall trap using loops indexes every time want address elements vector. type operation makes code much slower seen . whenever want make loop R might good idea first see inbuilt function R can us faster. useful function work often belonging apply family functions apply(), sapply(), lapply() tapply(). choice loop elements vector another useful tip always allocate necessary memory beforehand. shown also provides significant speedup. finally, can make use parallelization. useful need perform many tasks independent . parallelization allows us operations simultaneously taking advantage CPU cores , thus saving us time. can implemented R using future.apply package works similar apply functions mentioned earlier, additional option run loop iteration parallel.","code":"n <- 10000000   a <- 1:n   b <- 1:n   c <- numeric(n)    #indexing system.time({   for (i in 1:n) {     c[i] <- a[i] + b[i]   } }) #>    user  system elapsed  #>   1.286   0.027   1.314  #utilizing vectorization  system.time({   c <- a + b }) #>    user  system elapsed  #>   0.047   0.028   0.075 n <- 10000000  #Not allocating memory beforehand system.time({   obj <- vector()   for (i in 1:n) {     obj[i] <- i   } }) #>    user  system elapsed  #>   3.465   0.220   3.685  #Allocating memory beforehand system.time({   obj <- numeric(n)   for (i in 1:n) {     obj[i] <- i   } }) #>    user  system elapsed  #>    0.60    0.02    0.62"},{"path":"https://best-nicklas.github.io/Dataprojekt/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nicklas Stanislaus. Maintainer, author. Markus Nielsen. Author. Christian Mains. Author.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stanislaus N, Nielsen M, Mains C (2022). RyouSick: Simulation Analysis Genetic Data. R package version 1.0.0, https://best-nicklas.github.io/Dataprojekt/.","code":"@Manual{,   title = {RyouSick: Simulation and Analysis of Genetic Data},   author = {Nicklas Stanislaus and Markus Nielsen and Christian Mains},   year = {2022},   note = {R package version 1.0.0},   url = {https://best-nicklas.github.io/Dataprojekt/}, }"},{"path":[]},{"path":"https://best-nicklas.github.io/Dataprojekt/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Simulation and Analysis of Genetic Data","text":"RyouSick R package designed simulate small large data sets containing genotype phenotype information individuals (read vignette(\"Simulation_Basis\")). furthermore provides tools analyse datasets find genetic compositions might cause various inherited disorders (read articles vignette(\"GWAS\"), vignette(\"GWAX\") vignette(\"LTFH\")). , RyouSick provides dual functionality. Firstly, users able input real genotype phenotype data, provided correctly formatted loaded (See “Get Started” page article vignette(\"Writing_efficient_R_code_and_working_with_large_datasets\")), analyze using one provided analysis methods find SNPs might causing disorder. output analysis can passed prediction function provided package (read vignette(\"Prediction\")), generate model can used predict disease status future genotype cases. Secondly, users can simulate genetic data using -package functions perform analysis compare performance established analysis methods provided package. Reading articles presented order present introduction subject matter, just dying begin using package head “Get Started” page dive right RyouSick functionality.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulation and Analysis of Genetic Data","text":"can install development version RyouSick GitHub :","code":"# install.packages(\"devtools\") if devtools not already installed devtools::install_github(\"Best-Nicklas/Dataprojekt\")"},{"path":"https://best-nicklas.github.io/Dataprojekt/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Simulation and Analysis of Genetic Data","text":"store large quantities data outside RAM perform calculations data RyouSick uses bigsnpr bigstatr packages. Additionally RyouSick allows speedup simulations use parallelization underpinned future.apply package future backend. Besides number tidyverse packages, tibble, dplyr purrr used package , together aformentioned packages, also installed along RyouSick.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAS.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform genome wide association study (GWAS) — GWAS","title":"Perform genome wide association study (GWAS) — GWAS","text":"function performs GWAS given genotype phenotype data find statistically associated SNPs target disease.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAS.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform genome wide association study (GWAS) — GWAS","text":"","code":"GWAS(rds.obj, y, include = bigparallelr::rows_along(rds.obj$genotypes))"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAS.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform genome wide association study (GWAS) — GWAS","text":"rds.obj list length 3 containing FBM.code256 named genotypes accompanying FAM MAP. y Vector regressands regress (case-control status genotypes person) include Vector rows use regression. Used cross-validation. Default uses rows.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAS.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform genome wide association study (GWAS) — GWAS","text":"data.frame slopes regression, standard errors slope, t-scores associated slope P-values slope.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAX.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform GWAS with proxy information on family case-control status (GWAX) — GWAX","title":"Perform GWAS with proxy information on family case-control status (GWAX) — GWAX","text":"function uses proxy information case-control status given genotype data find likelihood SNPs causal. Information parent case-control status must included.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform GWAS with proxy information on family case-control status (GWAX) — GWAX","text":"","code":"GWAX(rds.obj, include = bigparallelr::rows_along(rds.obj$genotypes))"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform GWAS with proxy information on family case-control status (GWAX) — GWAX","text":"rds.obj list object FBM.code256 accompanying FAM MAP. Must contain case-control status parents FAM. include Vector rows use regression. Used cross-validation. Default uses rows.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/GWAX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform GWAS with proxy information on family case-control status (GWAX) — GWAX","text":"data.frame slopes regression, standard errors slope, t-scores associated slope P-values slope.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/LTFH.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform GWAS on posterior mean genetic liabilities (LTFH) — LTFH","title":"Perform GWAS on posterior mean genetic liabilities (LTFH) — LTFH","text":"function finds unique status configurations data calculates mean posterior genetic liability unique configurations using gibbs sampling. calculated posterior mean genetic liabilities matched person dataset used perform GWAS.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/LTFH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform GWAS on posterior mean genetic liabilities (LTFH) — LTFH","text":"","code":"LTFH(rds.obj, prevalence, h2)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/LTFH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform GWAS on posterior mean genetic liabilities (LTFH) — LTFH","text":"rds.obj list object FBM.code256 accompanying FAM MAP. prevalence likelihood disease population. h2 Heritability parameter.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/LTFH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform GWAS on posterior mean genetic liabilities (LTFH) — LTFH","text":"list 3 values: GWAS output, calculated posterior mean genetic liabilities, data frame configurations associated liabilities.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Manhattan_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Make a Manhattan plot from analysis data — Manhattan_plot","title":"Make a Manhattan plot from analysis data — Manhattan_plot","text":"function produces Manhattan plot p-values found association analysis.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Manhattan_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make a Manhattan plot from analysis data — Manhattan_plot","text":"","code":"Manhattan_plot(x)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Manhattan_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make a Manhattan plot from analysis data — Manhattan_plot","text":"x List object containing gwas data analysis.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Manhattan_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make a Manhattan plot from analysis data — Manhattan_plot","text":"Manhattan plot regressor (SNP) x-axis -log10(P-values) y-axis.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/OpenRds.html","id":null,"dir":"Reference","previous_headings":"","what":"Open an .rds file — OpenRds","title":"Open an .rds file — OpenRds","text":"function used open saved .rds file. path exists function returns error message.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/OpenRds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open an .rds file — OpenRds","text":"","code":"OpenRds(path)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/OpenRds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open an .rds file — OpenRds","text":"path Path file (INCLUDE FILE EXTENSION).","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/OpenRds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open an .rds file — OpenRds","text":"returns list saved .rds file.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Power_plots.html","id":null,"dir":"Reference","previous_headings":"","what":"Create power plots from GWAS, GWAX and LTFH data — Power_plots","title":"Create power plots from GWAS, GWAX and LTFH data — Power_plots","text":"function used calculate plot power models GWAS, GWAX LTFH. function design plot three plots get visual comparison power plots model.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Power_plots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create power plots from GWAS, GWAX and LTFH data — Power_plots","text":"","code":"Power_plots(Gwas_data, p)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Power_plots.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create power plots from GWAS, GWAX and LTFH data — Power_plots","text":"Gwas_data list exactly three entrances, GWAS-values gained model (GWAS, GWAX LTFH), data GWAS first entrance, data Gwax second entrance data LTFH last entrance. p P-value used determind causal SNPs","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Power_plots.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create power plots from GWAS, GWAX and LTFH data — Power_plots","text":"Ggplot power plots GWAS, GWAX LTFH, get visual comparison prediction power model.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Predict_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict Status for new data with pre-existing model — Predict_status","title":"Predict Status for new data with pre-existing model — Predict_status","text":"function used predict status one new persons.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Predict_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict Status for new data with pre-existing model — Predict_status","text":"","code":"Predict_status(rds.obj, model, configs = NULL, prevalence = 0.05)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Predict_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict Status for new data with pre-existing model — Predict_status","text":"rds.obj rds object containing FBM.code256. model model use predicting. configs data frame configurations liabilities. used LTFH. prevalence likelihood disease population.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Predict_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict Status for new data with pre-existing model — Predict_status","text":"vector 1's 0's indicating predicted status.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Prediction_cross_validation.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Prediction Cross-validation to determine best model — Prediction_cross_validation","title":"Perform Prediction Cross-validation to determine best model — Prediction_cross_validation","text":"function used calculate predictive powers different models different thresholds.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Prediction_cross_validation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Prediction Cross-validation to determine best model — Prediction_cross_validation","text":"","code":"Prediction_cross_validation(   rds.obj,   k,   threshold = 1,   method = \"GWAS\",   liabilities = rds.obj$FAM$Status )"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Prediction_cross_validation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Prediction Cross-validation to determine best model — Prediction_cross_validation","text":"rds.obj .rds file FBM.code256 accompanying FAM MAP. k Number folds used cross-validation. number rows FBM must least twice large k. Highly recommended choose k ~1% number rows, unless working small dataset, errors may occur. threshold Vector P-values used thresholding. Default use thresholding. method Method use prediction. Possible methods \"GWAS\", \"GWAX\", \"LTFH\". Default \"GWAS\". liabilities Vector liabilities used prediction \"LTFH\" method. specified, uses \"GWAS\" method instead.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/Prediction_cross_validation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Prediction Cross-validation to determine best model — Prediction_cross_validation","text":"list 2 values: tibble average best scores threshold, data.frame best model, fitted values, residuals, best p-value R^2.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/RyouSick-package.html","id":null,"dir":"Reference","previous_headings":"","what":"RyouSick: Simulation and Analysis of Genetic Data — RyouSick-package","title":"RyouSick: Simulation and Analysis of Genetic Data — RyouSick-package","text":"RyouSick R package designed simulate small large data sets containing genotype phenotype information individuals. furthermore provides tools analyse datasets find genetic compositions might cause various inherited disorders. , RyouSick provides dual functionality. Firstly, users able input real genotype phenotype data, provided correctly formatted loaded, analyze using one provided analysis methods find SNPs might causing disorder. output analysis can passed prediction function provided package, generate model can used predict disease status future genotype cases. Secondly, users can simulate genetic data using -package functions perform analysis compare performance established analysis methods provided package.","code":""},{"path":[]},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/RyouSick-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"RyouSick: Simulation and Analysis of Genetic Data — RyouSick-package","text":"Maintainer: Nicklas Stanislaus dummy@dummy.com Authors: Markus Nielsen Christian Mains","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_gliab.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of genetic liabilities — calc_gliab","title":"Calculation of genetic liabilities — calc_gliab","text":"internal helper function used calculate genetic liabilities.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_gliab.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of genetic liabilities — calc_gliab","text":"","code":"calc_gliab(obj, beta, mu, sigma)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_gliab.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of genetic liabilities — calc_gliab","text":"obj matrix consisting 0s, 1s 2s, row represents genotype. beta List beta values. mu List mu values normalize . sigma List sigma values normalize .","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_gliab.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of genetic liabilities — calc_gliab","text":"function returns vector genetic liabilities genotype.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_normalization_consts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculation of normalization constants — calc_normalization_consts","title":"Calculation of normalization constants — calc_normalization_consts","text":"internal helper function used calculate theoretical value constants mu sigma, used normalize data.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_normalization_consts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculation of normalization constants — calc_normalization_consts","text":"","code":"calc_normalization_consts(MAF, causal)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_normalization_consts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculation of normalization constants — calc_normalization_consts","text":"MAF Vector Minor Allele Frequencies. causal Vector causal SNPs causal SNPs value 1 non causal SNPs value 0.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/calc_normalization_consts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculation of normalization constants — calc_normalization_consts","text":"list contains two vectors, one theoretical values mu one theoretical values sigma.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/child_gen.html","id":null,"dir":"Reference","previous_headings":"","what":"Generator of genotypes for children — child_gen","title":"Generator of genotypes for children — child_gen","text":"function internal helper function used calculate genotypes children given parents genotypes.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/child_gen.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generator of genotypes for children — child_gen","text":"","code":"child_gen(p1, p2)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/child_gen.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generator of genotypes for children — child_gen","text":"p1 Matrix genotypes row genotype individual. p2 Matrix genotypes row genotype individual.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/child_gen.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generator of genotypes for children — child_gen","text":"function returns matrix childrens genotypes row childs genotype calculated based row p1 p2 index.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/child_gen.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generator of genotypes for children — child_gen","text":"genotypes child calculated finding average genotypes parents, randomly rounding non-intergers. SNPs parents 1 sampled 0,1, 2.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/cond_calc.html","id":null,"dir":"Reference","previous_headings":"","what":"Conditional values of mu and sigma — cond_calc","title":"Conditional values of mu and sigma — cond_calc","text":"function internal helper function used calculate conditional mu sigma co-variance multivariate normal distribution.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/cond_calc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conditional values of mu and sigma — cond_calc","text":"","code":"cond_calc(i, covmatrix)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/cond_calc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conditional values of mu and sigma — cond_calc","text":"parameter index interest. covmatrix co-variance matrix.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/cond_calc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conditional values of mu and sigma — cond_calc","text":"conditional values mu sigma.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/covmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate co-variance matrix for liability modeling — covmatrix","title":"Calculate co-variance matrix for liability modeling — covmatrix","text":"function creates theoretical co-variance matrix multivariate normal distribution used model liabilities.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/covmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate co-variance matrix for liability modeling — covmatrix","text":"","code":"covmatrix(h2, n_sib = 0)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/covmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate co-variance matrix for liability modeling — covmatrix","text":"h2 Integer specifying heritability parameter (0 < h2 < 1). n_sib Integer specifying number siblings (default 0).","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/covmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate co-variance matrix for liability modeling — covmatrix","text":"co-variance matrix, created value h2 number sibs.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/createRds.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an .rds file — createRds","title":"Create an .rds file — createRds","text":"function used create save file-backed matrix related information.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/createRds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an .rds file — createRds","text":"","code":"createRds(path, nrow, ncol)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/createRds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an .rds file — createRds","text":"path Path save files (SPECIFIY FILE EXTENSION). nrow Integer specifying number rows. ncol Integer specifying number columns.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/createRds.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create an .rds file — createRds","text":"list containing file-backed matrix, FAM tibble MAP tibble.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/createRds.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an .rds file — createRds","text":"using function .bk .rds file created specified path. Besides file-backed matrix two tibbles containing FAM (phenotype information) MAP (SNP information) intialized saved together file-backed matrix .rds file. .bk .rds file must always directory. function openRds can used access files (see function reference openRds).","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/get_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Get statistics on how many SNPs have been correctly identified — get_stats","title":"Get statistics on how many SNPs have been correctly identified — get_stats","text":"functions gives statistics count frequency false negatives, true negatives, false positives true positives analysed data","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/get_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get statistics on how many SNPs have been correctly identified — get_stats","text":"","code":"get_stats(pvalues, true_causal, threshold_pvalue)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/get_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get statistics on how many SNPs have been correctly identified — get_stats","text":"pvalues vector pvalues calculated analysis. true_causal vector indicating causal SNPs (1 causal, 0 causal). threshold_pvalue integer specifying cutoff SNP causal.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/get_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get statistics on how many SNPs have been correctly identified — get_stats","text":"dataframe containing statistics","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/gibbs_sampler.html","id":null,"dir":"Reference","previous_headings":"","what":"Gibbs sample posterior mean genetic liabilities — gibbs_sampler","title":"Gibbs sample posterior mean genetic liabilities — gibbs_sampler","text":"function used helper function LTFH function. calculates posterior mean genetic liability individual given configuration (case-control status individual, parents siblings) co-variance matrix modeling liabilities given.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/gibbs_sampler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gibbs sample posterior mean genetic liabilities — gibbs_sampler","text":"","code":"gibbs_sampler(config, burn_in, cov_mat, prevalence)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/gibbs_sampler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gibbs sample posterior mean genetic liabilities — gibbs_sampler","text":"config vector configuration, 1 case 0 case. First position specifies case-control status target individual, second position parent 1, third parent 2, rest siblings. burn_in integer specifies burn-period sampling mean. cov_mat Co-variance matrix modeling liabilities. prevalence Integer specifying likelihood disease population.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/gibbs_sampler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gibbs sample posterior mean genetic liabilities — gibbs_sampler","text":"posterior mean genetic liability configuration.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/rnorm_trunc.html","id":null,"dir":"Reference","previous_headings":"","what":"Sample from a truncated normal distribution — rnorm_trunc","title":"Sample from a truncated normal distribution — rnorm_trunc","text":"Helper function used sample truncated normal distribution.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/rnorm_trunc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sample from a truncated normal distribution — rnorm_trunc","text":"","code":"rnorm_trunc(n, range, mu, sigma)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/rnorm_trunc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sample from a truncated normal distribution — rnorm_trunc","text":"n Integer value specifying number samples. range vector two values specifying truncated range (lower bound upper bound). mu Integer value specifying mean normal distribution. sigma Integer value specifying standard deviation normal distribution.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/rnorm_trunc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Sample from a truncated normal distribution — rnorm_trunc","text":"Sample values truncated normal distribution.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/saveRds.html","id":null,"dir":"Reference","previous_headings":"","what":"Saving the work done to an rds object — saveRds","title":"Saving the work done to an rds object — saveRds","text":"function used save changes made rds object R session.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/saveRds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Saving the work done to an rds object — saveRds","text":"","code":"saveRds(rds.obj)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/saveRds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Saving the work done to an rds object — saveRds","text":"rds.obj rds object save.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_disease.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of disease parameters — sim_disease","title":"Simulation of disease parameters — sim_disease","text":"function used simulate disease parameters. predetermined, function randomly calculate causal SNPs, MAF vaules beta values.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_disease.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of disease parameters — sim_disease","text":"","code":"sim_disease(   n_snp,   prevalence,   h2,   causal = NULL,   causal_n = max(1, round(n_snp/10)),   maf = NULL,   maf_low = 0.01,   maf_high = 0.49 )"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_disease.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of disease parameters — sim_disease","text":"n_snp Integer specifying amount SNPs. prevalence Integer specifying prevalence disease simulated population. h2 Integer specifying heritability parameter. causal Vector predetermined causal SNPs (0 causal, 1 causal). Leave empty get random causal SNPs. causal_n Integer specifying amount causal SNPs causal param given. Default value 10 procent total SNPs. maf Vector predetermined Minor Allele Frequencies.Leave empty get random MAF. maf_low Integer specifying lower bound MAF none given. maf_high Integer specifying upper bound MAF none given.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_disease.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of disease parameters — sim_disease","text":"list disease parameters.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_no_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of genotypes with no family — sim_genotypes_no_family","title":"Simulation of genotypes with no family — sim_genotypes_no_family","text":"function used simulate genotypes individuals family accompanying phenotype data.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_no_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of genotypes with no family — sim_genotypes_no_family","text":"","code":"sim_genotypes_no_family(   n,   disease,   path,   overwrite = T,   n_blocks = min(n, 500) )"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_no_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of genotypes with no family — sim_genotypes_no_family","text":"n Integer specifying amount gentypes/indivduals simulate. disease list disease parameters. Can created using sim_disease() function. path Path .rds file saved, one stored overwriting existing .rds file (SPECIFY FILE EXTENSION). overwrite Boolean value used determine existing .rds file specified name overwritten (Default value TRUE). n_blocks Integer used determine number blocks run simulation (Default value 500). Set higher running memory issues freezing crashing. Setting n_blocks higher reduces memory size block, slightly slows calculation time.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_no_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of genotypes with no family — sim_genotypes_no_family","text":"Returns list object, also refered rds object, containing FMB.code256 genotypes, MAF object containing information SNPs FAM object containing phenotype information genotypes","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_no_family.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation of genotypes with no family — sim_genotypes_no_family","text":"Simulating 100.000x100.000 dataset take around 9.76 GB space. Since running time depends number variables, parallelization settings, core speed core amount, accurately give estimation long simulation take. Instead simply warn user simulations might take upwards multiple hours large datasets 100.000x100.000. Simulation can performed using parallelization parallelization plan set prior execution global environment.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_with_family.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","title":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","text":"function used simulate genotypes gentypes individuals accompanying phenotype information information case-control status parents annd possible sibling.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_with_family.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","text":"","code":"sim_genotypes_with_family(   n,   disease,   path,   n_sibs = NULL,   overwrite = T,   n_blocks = min(n, 500) )"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_with_family.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","text":"n Integer specifying number individuals/genotypes simulate. disease list disease parameters. path Path .rds file saved, one stored overwriting existing .rds file (SPECIFY FILE EXTENSION). n_sibs Integer value many sibling produce genotype vector containing values many sibs sample (ex. c(1,4,6) produce genotypes randomly 1, 4 6 siblings). overwrite Boolean value used determine helper function allowed overwrite (Default value TRUE) n_blocks Integer used determine number blocks run simulation (Default value 500). Set higher running memory issues freezing crashing. Setting n_blocks higher reduces memory size block, slightly slows calculation time.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_with_family.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","text":"Returns list object containing FMB.code256 genotypes, MAF object containing information SNPs FAM object containing phenotype information genotypes well case-control status parents possible siblings.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/sim_genotypes_with_family.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulation of family (Fixed and non fixed) — sim_genotypes_with_family","text":"Simulating 100.000x100.000 dataset take around 9.76 GB space. Since running time depends number variables, parallelization settings, core speed, core amount sibling configuration, accurately give estimation long simulation take. Instead simply warn user simulations might take upwards multiple hours large datasets 100.000x100.000. default n_blocks parameter set 500 number 100.000x100.000 2 siblings genotype use maximum 2 GB RAM calculating single block. Simulation can performed using parallelization parallelization plan set prior execution global environment. WARNING: using parallelization , n_blocks 500, use maximum 2 GB RAM process running simulation 100.000x100.000 2 siblings genotype.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/verifyRds.html","id":null,"dir":"Reference","previous_headings":"","what":"Verification of .rds file — verifyRds","title":"Verification of .rds file — verifyRds","text":"internal helper function used verify path valid. path already use, checks already exiting .rds file dimensions overwrites (overwrite TRUE). dimensions wrong stops returns error message.","code":""},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/verifyRds.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Verification of .rds file — verifyRds","text":"","code":"verifyRds(path, overwrite, nrow, ncol)"},{"path":"https://best-nicklas.github.io/Dataprojekt/reference/verifyRds.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Verification of .rds file — verifyRds","text":"path Path save find file. overwrite Boolean value specifying whether overwrite exisiting files. nrow Integer specifying amount rows. ncol Integer specifying amount columns.","code":""}]
